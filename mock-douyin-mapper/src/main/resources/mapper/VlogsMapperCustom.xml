<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiv.mapper.VlogsMapperCustom">
    <select id="getIndexVlogList" parameterType="map" resultType="com.tiv.model.vo.IndexVlogVO">
        SELECT
        v.id as vlogId,
        v.vlogger_id as vloggerId,
        u.face as vloggerFace,
        u.nickname as vloggerName,
        v.title as content,
        v.url as url,
        v.cover as cover,
        v.width as width,
        v.height as height,
        v.like_counts as likeCounts,
        v.comment_counts as commentsCounts,
        v.is_private as isPrivate
        FROM
        vlogs v
        LEFT JOIN
        users u
        ON
        v.vlogger_id = u.id
        WHERE
        v.is_private = 0
        <if test="paramMap.search != null and paramMap.search != ''">
            AND v.title like CONCAT('%', #{paramMap.search}, '%')
        </if>
        ORDER BY
        v.create_time
        DESC
    </select>

    <select id="getVlogDetailById" parameterType="map" resultType="com.tiv.model.vo.IndexVlogVO">
        SELECT v.id             as vlogId,
               v.vlogger_id     as vloggerId,
               u.face           as vloggerFace,
               u.nickname       as vloggerName,
               v.title          as content,
               v.url            as url,
               v.cover          as cover,
               v.width          as width,
               v.height         as height,
               v.like_counts    as likeCounts,
               v.comment_counts as commentsCounts,
               v.is_private     as isPrivate
        FROM vlogs v
                 LEFT JOIN
             users u
             ON
                 v.vlogger_id = u.id
        WHERE v.id = #{paramMap.vlogId}
    </select>

    <select id="getLikedVlogList" parameterType="map" resultType="com.tiv.model.vo.IndexVlogVO">
        SELECT v.id             as vlogId,
               v.vlogger_id     as vloggerId,
               v.title          as content,
               v.url            as url,
               v.cover          as cover,
               v.width          as width,
               v.height         as height,
               v.like_counts    as likeCounts,
               v.comment_counts as commentsCounts,
               v.is_private     as isPrivate
        FROM vlogs v
                 LEFT JOIN
             like_vlogs l
             ON
                 v.id = l.vlog_id
                 LEFT JOIN
             users u
             ON
                 v.vlogger_id = u.id
        WHERE u.id = #{paramMap.userId}
          AND v.is_private = 0
        ORDER BY v.create_time
                DESC
    </select>

    <select id="getFollowedVlogList" resultType="com.tiv.model.vo.IndexVlogVO">
        SELECT v.id             as vlogId,
               v.vlogger_id     as vloggerId,
               u.face           as vloggerFace,
               u.nickname       as vloggerName,
               v.title          as content,
               v.url            as url,
               v.cover          as cover,
               v.width          as width,
               v.height         as height,
               v.like_counts    as likeCounts,
               v.comment_counts as commentsCounts,
               v.is_private     as isPrivate
        FROM vlogs v
                 LEFT JOIN
             fans f
             ON
                 v.vlogger_id = f.vlogger_id
                 LEFT JOIN
             users u
             ON
                 f.vlogger_id = u.id
        WHERE v.is_private = 0
          AND f.fan_id = #{paramMap.userId}
        ORDER BY v.create_time
                DESC
    </select>

    <select id="getFriendsVlogList" resultType="com.tiv.model.vo.IndexVlogVO">
        SELECT v.id             as vlogId,
               v.vlogger_id     as vloggerId,
               u.face           as vloggerFace,
               u.nickname       as vloggerName,
               v.title          as content,
               v.url            as url,
               v.cover          as cover,
               v.width          as width,
               v.height         as height,
               v.like_counts    as likeCounts,
               v.comment_counts as commentsCounts,
               v.is_private     as isPrivate
        FROM vlogs v
                 LEFT JOIN fans f
                           ON v.vlogger_id = f.fan_id
                 LEFT JOIN users u
                           ON f.fan_id = u.id
        WHERE v.is_private = 0
          AND f.vlogger_id = #{paramMap.userId}
          AND f.is_friend = 1
        ORDER BY v.create_time DESC
    </select>
</mapper>